<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sql(postgresql)</title>
      <link href="/2024/10/16/sql/"/>
      <url>/2024/10/16/sql/</url>
      
        <content type="html"><![CDATA[<h1 id="Application-Layer"><a href="#Application-Layer" class="headerlink" title="Application Layer"></a>Application Layer</h1><h2 id="State-Level-Interface-SLI"><a href="#State-Level-Interface-SLI" class="headerlink" title="State Level Interface(SLI)"></a>State Level Interface(SLI)</h2><p>sql statement+hose language: python, java, go, c&#x2F;c++</p><h3 id="python-PostgreSQL"><a href="#python-PostgreSQL" class="headerlink" title="python+PostgreSQL"></a>python+PostgreSQL</h3><p><strong>psycopg</strong></p><p>in terminal&#x2F;cmd:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install psycopg</span><br><span class="line">pip install &quot;psycopg[binary]&quot;</span><br></pre></td></tr></table></figure><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><p>in pgAdmin4</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">open</span> permission <span class="keyword">to</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="keyword">ALL</span> TABLES <span class="keyword">IN</span> SCHEMA public <span class="keyword">TO</span> testuser</span><br><span class="line"># <span class="keyword">close</span> permission <span class="keyword">to</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="keyword">ALL</span> TABLES <span class="keyword">IN</span> SCHEMA public <span class="keyword">FROM</span> testuser;</span><br></pre></td></tr></table></figure><p>in idel shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> psycopg</span><br><span class="line">connection=psycopg.connect(<span class="string">&quot;dbname=&#x27;Le Tour 2024&#x27; user=testuser password=test&quot;</span>)</span><br><span class="line">cursor=connection.cursor()</span><br><span class="line">cursor.execute(<span class="string">&quot;SELECT * FROM riders LIMIT 5&quot;</span>)</span><br><span class="line">row=cursor.fetchone() <span class="comment">#cursor.fetchall() #column</span></span><br><span class="line"></span><br><span class="line">cursor.close()</span><br><span class="line">connection.commit()</span><br><span class="line">connection.close()</span><br></pre></td></tr></table></figure><h2 id="Dynamic-sql"><a href="#Dynamic-sql" class="headerlink" title="Dynamic sql"></a>Dynamic sql</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">first_n_rider</span>(<span class="params">n</span>):</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;SELECT r.name\n&quot;</span>+<span class="string">&quot;FROM riders r\n&quot;</span>+<span class="string">&quot;ORDER BY r.bib DESC\n&quot;</span>+<span class="string">&quot;LIMIT &quot;</span>+<span class="built_in">str</span>(n)+<span class="string">&quot;;&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cursor.execute(<span class="string">&quot;SELECT * FROM riders LIMIT %s&quot;</span>,(<span class="built_in">str</span>(n),))</span><br><span class="line"><span class="comment">#%s placehoder,can only contain single value</span></span><br><span class="line"><span class="comment">#(str(n),) a tuple of data</span></span><br></pre></td></tr></table></figure><h2 id="Transaction"><a href="#Transaction" class="headerlink" title="Transaction"></a>Transaction</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add_engineer</span>(<span class="params">connection, <span class="built_in">id</span>, specialty</span>):   </span><br><span class="line">  cursor = connection.cursor()   </span><br><span class="line">  cursor.execute(<span class="string">&#x27;SELECT COUNT(*) FROM manager WHERE id = %s&#x27;</span>,(<span class="built_in">id</span>,))   </span><br><span class="line">  row = cursor.fetchone()</span><br><span class="line">  <span class="keyword">if</span> row[<span class="number">0</span>] == <span class="number">0</span>:     </span><br><span class="line">    cursor.execute(<span class="string">&#x27;INSERT INTO engineer VALUES (%s, %s)&#x27;</span>,(<span class="built_in">id</span>, specialty))     </span><br><span class="line">    connection.commit()    <span class="comment"># very important!  执行命令 </span></span><br><span class="line">  <span class="keyword">else</span>:     </span><br><span class="line">    connection.rollback() <span class="comment">#撤销上次commit的所有内容</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="handle-error"><a href="#handle-error" class="headerlink" title="handle error"></a>handle error</h3><ul><li><p>try: &#x2F;except psycopg.IntegrityError as e:</p></li><li><p>with connection.transaction():</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add_engineer</span>(<span class="params">connection, <span class="built_in">id</span>, specialty</span>):</span><br><span class="line">  <span class="comment">#进入一个with块，自动开启一个数据库任务</span></span><br><span class="line">  <span class="comment">#会自动commit，发生异常会rollback</span></span><br><span class="line">  <span class="keyword">with</span> connection.transaction():</span><br><span class="line">    cursor = connection.cursor()</span><br><span class="line">    cursor.execute(<span class="string">&#x27;SELECT COUNT(*) FROM manager WHERE id = %s&#x27;</span>, (<span class="built_in">id</span>,))</span><br><span class="line">    row = cursor.fetchone()</span><br><span class="line">    <span class="keyword">if</span> row[<span class="number">0</span>] == <span class="number">0</span>:</span><br><span class="line">      <span class="keyword">try</span>: <span class="comment">#try/except</span></span><br><span class="line">        <span class="keyword">with</span> connection.transaction():</span><br><span class="line">            cursor = connection.cursor()</span><br><span class="line">            cursor.execute(<span class="string">&#x27;INSERT INTO engineer VALUES (%s, %s)&#x27;</span>,</span><br><span class="line">                (<span class="built_in">id</span>, specialty))</span><br><span class="line">      <span class="keyword">except</span> psycopg.IntegrityError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Error:&quot;</span>, e)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> NUS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Fundamental</title>
      <link href="/2024/10/15/Python/"/>
      <url>/2024/10/15/Python/</url>
      
        <content type="html"><![CDATA[<h1 id="File-IO"><a href="#File-IO" class="headerlink" title="File IO"></a>File IO</h1><p>write a file</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;my_file.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">  f.write(<span class="string">&#x27;This is my first line&#x27;</span>+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    f.write(<span class="string">&#x27;This is my second line&#x27;</span>+<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="file-opening-modes"><a href="#file-opening-modes" class="headerlink" title="file opening modes"></a>file opening modes</h2><table><thead><tr><th>Modes</th><th>Description</th></tr></thead><tbody><tr><td>r</td><td>open a file for reading only, pointer at beginning</td></tr><tr><td>w</td><td>open a file for writing only.<br />if exist, overwrite<br />if not exist, create a new file for writing</td></tr><tr><td>a</td><td>open a file for appending<br />if exist, pointer at the end<br />if not exist,  create a new file</td></tr><tr><td>_b</td><td>in binary format</td></tr><tr><td>__+</td><td>open a file for both writing an d reading</td></tr></tbody></table><h2 id="python-escape-characher"><a href="#python-escape-characher" class="headerlink" title="python escape characher"></a>python escape characher</h2><table><thead><tr><th align="left">Code</th><th align="left">Result</th><th align="left">Example</th></tr></thead><tbody><tr><td align="left">\‘</td><td align="left">Single Quote</td><td align="left"><code>&#39;It\&#39;s a sunny day.&#39;</code>，在字符串中插入单引号 <code>&#39;</code>。</td></tr><tr><td align="left">\\</td><td align="left">Backslash</td><td align="left"><code>&quot;C:\\Program Files\\MyApp&quot;</code>，表示文件路径中的反斜杠</td></tr><tr><td align="left">&#x3D;&#x3D;\n&#x3D;&#x3D;</td><td align="left">New Line</td><td align="left"><code>&quot;Hello\nWorld!&quot;</code></td></tr><tr><td align="left">\r</td><td align="left">Carriage Return</td><td align="left">将光标移动到当前行的开头，但不换行。(覆盖\r之前的输入)</td></tr><tr><td align="left">&#x3D;&#x3D;\t&#x3D;&#x3D;</td><td align="left">Tab</td><td align="left"><code>&quot;Name\tAge\tLocation&quot;</code>，会产生列对齐的效果。</td></tr><tr><td align="left">\b</td><td align="left">Backspace</td><td align="left"><code>&quot;Helloo\b&quot;</code>，输出为 <code>Hello</code></td></tr><tr><td align="left">\f</td><td align="left">Form Feed</td><td align="left">换页符</td></tr><tr><td align="left">\ooo</td><td align="left">Octal value</td><td align="left"><code>\141</code> 表示小写字母 <code>a</code>，因为 <code>141</code> 是字母 <code>a</code> 的八进制 ASCII 值。</td></tr><tr><td align="left">\xhh</td><td align="left">Hex value</td><td align="left"><code>\x61</code> 表示小写字母 <code>a</code>，因为 <code>61</code> 是字母 <code>a</code> 的十六进制 ASCII 值。</td></tr></tbody></table><h2 id="string-split-rstrip-lstrip"><a href="#string-split-rstrip-lstrip" class="headerlink" title="string split() &amp; rstrip() &amp; lstrip()"></a>string split() &amp; rstrip() &amp; lstrip()</h2><p>data.split()</p><ul><li><strong>string</strong> “John 70\nMary 50” -&gt; <strong>list</strong> [‘John’,’70’,’Mary’,’50’]</li><li>default separators are space and newline ‘\n’</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">string=<span class="string">&quot;55555 Hello Everybody! 55555&quot;</span></span><br><span class="line">string.rstrip(<span class="string">&#x27;5&#x27;</span>) <span class="comment">#&quot;55555 Hello Everybody! &quot;</span></span><br><span class="line">string.lstrip(<span class="string">&#x27;5&#x27;</span>) <span class="comment">#&quot; Hello Everybody! 55555&quot;</span></span><br><span class="line">string.lstrip(<span class="string">&#x27;5&#x27;</span>).rstrip(<span class="string">&#x27;5&#x27;</span>)<span class="comment">#&#x27; Hello Everybody! &#x27;</span></span><br><span class="line">string.split()</span><br><span class="line">string.split(<span class="string">&#x27;o&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="reading-the-file-line-by-line"><a href="#reading-the-file-line-by-line" class="headerlink" title="reading the file line by line"></a>reading the file line by line</h2><p>the file type is also <strong>iterable</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">read_line_by_line</span>():</span><br><span class="line">  <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;student_marks.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> a_line <span class="keyword">in</span> f:</span><br><span class="line">      <span class="built_in">print</span>(a_line)</span><br><span class="line">      </span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;aaa.csv&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">  f.readline()</span><br><span class="line">  f.readline()</span><br></pre></td></tr></table></figure><p>however the result is like (with the newline character):</p><p>‘John 70\n’</p><p>‘Mary 50\n’</p><h3 id="rstrip-strip-characters-on-the-right"><a href="#rstrip-strip-characters-on-the-right" class="headerlink" title="rstrip(): strip characters on the right"></a>rstrip(): strip characters on the right</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;aaa.csv&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">  line1=f.readline().rstrip(<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="Higher-Order-Functions"><a href="#Higher-Order-Functions" class="headerlink" title="Higher Order Functions"></a>Higher Order Functions</h1><h2 id="sequence-and-Higher-Order-Functions"><a href="#sequence-and-Higher-Order-Functions" class="headerlink" title="sequence and Higher Order Functions"></a>sequence and Higher Order Functions</h2><h3 id="map-f-seq"><a href="#map-f-seq" class="headerlink" title="map(f,seq)"></a>map(f,seq)</h3><p>apply a function f to every item x in the sequence</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">map</span>(<span class="params">f,seq</span>):</span><br><span class="line">  output=[]</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> seq:</span><br><span class="line">    output.append(f(i))</span><br><span class="line">  <span class="keyword">return</span> output</span><br></pre></td></tr></table></figure><p>in python, map() return a type **”map” object **, can convert it into other sequences like tuple and list</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tup=(-<span class="number">1</span>,-<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">map1=<span class="built_in">map</span>(<span class="built_in">abs</span>,tup)</span><br><span class="line">map1Tuple=<span class="built_in">tuple</span>(map1)</span><br><span class="line">map1List=<span class="built_in">list</span>(map1)</span><br></pre></td></tr></table></figure><p>map object is iterable: when you took out items from map object , the items will gone</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">map1Tuple=<span class="built_in">tuple</span>(map1) <span class="comment">#(1,2,3)</span></span><br><span class="line">map1List=<span class="built_in">list</span>(map1) <span class="comment">#[]</span></span><br></pre></td></tr></table></figure><h3 id="filter"><a href="#filter" class="headerlink" title="filter()"></a>filter()</h3><p>apply a &#x3D;&#x3D;predicate function(return True or False)&#x3D;&#x3D; f to every item x in the sequence, keep item only if f(x) returns True</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;a&#x27;</span>,(<span class="number">1</span>,<span class="number">2</span>),(<span class="string">&#x27;b&#x27;</span>,<span class="number">3</span>)]</span><br><span class="line"><span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x:<span class="built_in">type</span>(x)==<span class="built_in">int</span>,l)) <span class="comment">#[1,2,3]</span></span><br></pre></td></tr></table></figure><h3 id="deep-function"><a href="#deep-function" class="headerlink" title="deep function"></a>deep function</h3><h4 id="deepcount"><a href="#deepcount" class="headerlink" title="deepcount()"></a>deepcount()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lst2=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]]</span><br><span class="line">deepcount(lst2) <span class="comment">#7</span></span><br></pre></td></tr></table></figure><p>counting logic:</p><p>Total count&#x3D;count of the first item+count of the rest</p><h4 id="deepSquare"><a href="#deepSquare" class="headerlink" title="deepSquare()"></a>deepSquare()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l=[<span class="number">1</span>,<span class="number">4</span>,[<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">deepSquare(l) <span class="comment">#[1,16,[4,9]]</span></span><br></pre></td></tr></table></figure><h4 id="deepInc"><a href="#deepInc" class="headerlink" title="deepInc()"></a>deepInc()</h4><p>deep increment by 1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">l=[<span class="number">1</span>,<span class="number">4</span>,[<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">deepInc(l) <span class="comment">#[2,5,[3,4]]</span></span><br><span class="line">deepInc(deepInc(deepInc(l)))</span><br></pre></td></tr></table></figure><h4 id="Flatten"><a href="#Flatten" class="headerlink" title="Flatten"></a>Flatten</h4><h2 id="one-line-function-map-filter-reduce"><a href="#one-line-function-map-filter-reduce" class="headerlink" title="one-line function: map, filter, reduce"></a>one-line function: map, filter, reduce</h2><p>input: array</p><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce()"></a>reduce()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line">reduce(f,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line">f(f(f(f(f(<span class="number">1</span>,<span class="number">2</span>),<span class="number">3</span>),<span class="number">4</span>),<span class="number">5</span>),<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">reduce(<span class="keyword">lambda</span> x,y:x+y,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]) <span class="comment">#output:6</span></span><br></pre></td></tr></table></figure><h3 id="any-all"><a href="#any-all" class="headerlink" title="any() &#x2F; all()"></a>any() &#x2F; all()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">L=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="built_in">any</span>(x&gt;<span class="number">3</span> <span class="keyword">for</span> x <span class="keyword">in</span> L) <span class="comment">#True</span></span><br><span class="line"><span class="built_in">any</span>(x&gt;<span class="number">9</span> <span class="keyword">for</span> x <span class="keyword">in</span> L) <span class="comment">#False</span></span><br><span class="line"><span class="built_in">all</span>(x&gt;<span class="number">3</span> <span class="keyword">for</span> x <span class="keyword">in</span> L) <span class="comment">#False</span></span><br><span class="line"><span class="built_in">all</span>(x&gt;<span class="number">0</span> <span class="keyword">for</span> x <span class="keyword">in</span> L) <span class="comment">#True</span></span><br></pre></td></tr></table></figure><h3 id="sum"><a href="#sum" class="headerlink" title="sum()"></a>sum()</h3><p>can use it in any 5001 assignment</p><p>cannot add ‘string’</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">22222</span></span><br><span class="line"><span class="built_in">sum</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:<span class="built_in">int</span>(x),<span class="built_in">list</span>(<span class="built_in">str</span>(n))))</span><br><span class="line"><span class="built_in">sum</span>(<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">list</span>(<span class="built_in">str</span>(n))))</span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="built_in">str</span>(n) <span class="comment">#&#x27;22222&#x27;</span></span><br><span class="line"><span class="built_in">list</span>(<span class="built_in">str</span>(n)) <span class="comment"># [&#x27;2&#x27;,&#x27;2&#x27;,&#x27;2&#x27;,&#x27;2&#x27;,&#x27;2&#x27;]</span></span><br><span class="line"><span class="built_in">map</span>(...) <span class="comment">#[2,2,2,2,2]</span></span><br><span class="line"><span class="built_in">sum</span>(...) <span class="comment">#10</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">burgerPrice</span>(<span class="params">burger</span>):</span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">sum</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:&#123;<span class="string">&#x27;B&#x27;</span>:<span class="number">0.5</span>,<span class="string">&#x27;C&#x27;</span>:<span class="number">0.8</span>,<span class="string">&#x27;P&#x27;</span>:<span class="number">1.5</span>,<span class="string">&#x27;V&#x27;</span>:<span class="number">0.7</span>&#125;[x],burger))</span><br></pre></td></tr></table></figure><h3 id="map"><a href="#map" class="headerlink" title="map()"></a>map()</h3><p>map return a map type</p><p>so if we want to return a list from map, we need to do:<code>list(map(...))</code></p><h1 id="Two-dimensional-Array"><a href="#Two-dimensional-Array" class="headerlink" title="Two dimensional Array"></a>Two dimensional Array</h1><!--all contents are learned from IT5001 at NUS from Prof Alan CHENG-->]]></content>
      
      
      <categories>
          
          <category> NUS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码随想录笔记</title>
      <link href="/2024/10/12/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/10/12/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="二分查找-704-二分查找"><a href="#二分查找-704-二分查找" class="headerlink" title="二分查找 (704. 二分查找)"></a>二分查找 (704. 二分查找)</h2><ul><li><p>时间复杂度：</p><ul><li>暴力解法时间复杂度：O(n)</li><li>二分法时间复杂度：O(logn)</li></ul></li><li><p>对于有序数组，使用middle，left，right来解题</p></li></ul><p>二分查找两种写法,按不同区间来区分</p><ol><li><p>target -&gt; [left,right]</p></li><li><p>target -&gt; [left,right)</p></li></ol><p>注意事项：</p><ul><li>定义right：1. len(nums)-1 2.len(nums)</li><li>1的left&#x3D;right有意义，所以写循环的时候要注意边界 while(left&lt;&#x3D;right)，同理2的循环是小于号</li><li>切换指针时候: left&#x3D;middle+1 &#x2F; right&#x3D;middle-1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">search</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        left=<span class="number">0</span></span><br><span class="line">        right=<span class="built_in">len</span>(nums)-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> (left&lt;=right):</span><br><span class="line">            middle=(left+right)//<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[middle]==target:</span><br><span class="line">                <span class="keyword">return</span> middle</span><br><span class="line">            <span class="keyword">elif</span> nums[middle]&lt;target:</span><br><span class="line">                left=middle+<span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> nums[middle]&gt;target:</span><br><span class="line">                right=middle-<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="双指针法-27-移除元素"><a href="#双指针法-27-移除元素" class="headerlink" title="双指针法 (27. 移除元素)"></a>双指针法 (27. 移除元素)</h2><ul><li><p>时间复杂度</p><ul><li>暴力解法时间复杂度：O(n^2)</li><li>双指针时间复杂度：O(n)</li></ul></li><li><p>从左到右去除数组中的某一个值，需要把后面的值往前挪来填空缺。</p></li></ul><p>&#x3D;&#x3D;快慢指针&#x3D;&#x3D;，slow&#x2F;fast，<strong>通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。</strong></p><p>slow:指向更新的新数组下标的位置</p><p>fast：寻找新数组，即不含有目标元素的数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">removeElement</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], val: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        slowIndex=<span class="number">0</span></span><br><span class="line">        fastIndex=<span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> fastIndex&lt;<span class="built_in">len</span>(nums):</span><br><span class="line">            <span class="keyword">if</span> nums[fastIndex]!=val:</span><br><span class="line">                nums[slowIndex]=nums[fastIndex]</span><br><span class="line">                slowIndex+=<span class="number">1</span></span><br><span class="line">            fastIndex+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> slowIndex</span><br></pre></td></tr></table></figure><h2 id="滑动窗口-209-长度最小的子数组"><a href="#滑动窗口-209-长度最小的子数组" class="headerlink" title="滑动窗口 (209. 长度最小的子数组)"></a>滑动窗口 (209. 长度最小的子数组)</h2><ul><li><p>暴力解法时间复杂度：O(n^2)</p></li><li><p>滑动窗口时间复杂度：O(n)</p></li><li><p>对于一个array，在给定条件下查找它的subarray</p></li></ul><p>&#x3D;&#x3D;左右指针&#x3D;&#x3D;（left&#x2F;right），条件判断什么时候移动左右指针</p><p>定义无穷大数：inf_len&#x3D;float(‘inf’)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">minSubArrayLen</span>(<span class="params">self, target: <span class="built_in">int</span>, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        l=<span class="built_in">len</span>(nums)</span><br><span class="line">        left=<span class="number">0</span></span><br><span class="line">        right=<span class="number">0</span></span><br><span class="line">        num_sum=<span class="number">0</span></span><br><span class="line">        min_len=<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">        <span class="keyword">while</span> right&lt;l:</span><br><span class="line">            num_sum+=nums[right]</span><br><span class="line">            <span class="keyword">while</span> num_sum&gt;=target:</span><br><span class="line">                min_len=<span class="built_in">min</span>(min_len,right-left+<span class="number">1</span>)</span><br><span class="line">                num_sum-=nums[left]</span><br><span class="line">                left+=<span class="number">1</span></span><br><span class="line">            right+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> min_len <span class="keyword">if</span> min_len!=<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>) <span class="keyword">else</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="模拟行为"><a href="#模拟行为" class="headerlink" title="模拟行为"></a>模拟行为</h2><h3 id="59-螺旋矩阵"><a href="#59-螺旋矩阵" class="headerlink" title="59.螺旋矩阵"></a>59.螺旋矩阵</h3><p><strong>循环不变量原则</strong></p><p><img src="/images/suixianglu/SprialMatrix.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">generateMatrix</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span><br><span class="line">        nums=[[<span class="number">0</span>]*n <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        startx,starty=<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">        loop,mid=n//<span class="number">2</span>,n//<span class="number">2</span></span><br><span class="line">        count=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> offset <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,loop+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(startx,n-offset): <span class="comment">#从左到右</span></span><br><span class="line">                nums[starty][i]=count</span><br><span class="line">                count+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(starty,n-offset):</span><br><span class="line">                nums[i][n-offset]=count</span><br><span class="line">                count+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-offset,startx,-<span class="number">1</span>):</span><br><span class="line">                nums[n-offset][i]=count</span><br><span class="line">                count+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-offset,starty,-<span class="number">1</span>):</span><br><span class="line">                nums[i][startx]=count</span><br><span class="line">                count+=<span class="number">1</span></span><br><span class="line">            startx+=<span class="number">1</span></span><br><span class="line">            starty+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> n%<span class="number">2</span>!=<span class="number">0</span>:</span><br><span class="line">                nums[mid][mid]=count</span><br><span class="line">        <span class="keyword">return</span> nums</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">generateMatrix</span>(<span class="params">self, n</span>):</span><br><span class="line">        <span class="keyword">if</span> n &lt;= <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 初始化 n x n 矩阵</span></span><br><span class="line">        matrix = [[<span class="number">0</span>]*n <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化边界和起始值</span></span><br><span class="line">        top, bottom, left, right = <span class="number">0</span>, n-<span class="number">1</span>, <span class="number">0</span>, n-<span class="number">1</span></span><br><span class="line">        num = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> top &lt;= bottom <span class="keyword">and</span> left &lt;= right:</span><br><span class="line">            <span class="comment"># 从左到右填充上边界</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(left, right + <span class="number">1</span>):</span><br><span class="line">                matrix[top][i] = num</span><br><span class="line">                num += <span class="number">1</span></span><br><span class="line">            top += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 从上到下填充右边界</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(top, bottom + <span class="number">1</span>):</span><br><span class="line">                matrix[i][right] = num</span><br><span class="line">                num += <span class="number">1</span></span><br><span class="line">            right -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 从右到左填充下边界</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(right, left - <span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">                matrix[bottom][i] = num</span><br><span class="line">                num += <span class="number">1</span></span><br><span class="line">            bottom -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 从下到上填充左边界</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(bottom, top - <span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">                matrix[i][left] = num</span><br><span class="line">                num += <span class="number">1</span></span><br><span class="line">            left += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> matrix</span><br></pre></td></tr></table></figure><h2 id="区间和"><a href="#区间和" class="headerlink" title="区间和"></a>区间和</h2><p>vec[i]里面有不同的数，想求某个区间的数字之和，可以新建一个数组p[i]，表示 下标 0 到 i 的 vec[i] 累加 之和。</p><p>如果我们想统计在vec数组上 下标 2 到下标 5 之间的累加和，用 p[5] - p[1] 就可以了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p[<span class="number">1</span>] = vec[<span class="number">0</span>] + vec[<span class="number">1</span>];</span><br><span class="line">p[<span class="number">5</span>] = vec[<span class="number">0</span>] + vec[<span class="number">1</span>] + vec[<span class="number">2</span>] + vec[<span class="number">3</span>] + vec[<span class="number">4</span>] + vec[<span class="number">5</span>];</span><br><span class="line">p[<span class="number">5</span>] - p[<span class="number">1</span>] = vec[<span class="number">2</span>] + vec[<span class="number">3</span>] + vec[<span class="number">4</span>] + vec[<span class="number">5</span>];</span><br></pre></td></tr></table></figure><h1 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h1><p><strong>什么时候使用哈希法?</strong> </p><p>当我们需要查询一个元素是否出现过，或者一个元素是否在集合里的时候( while k in record)，就要第一时间想到哈希法。</p><ul><li><p>数组做哈希表：全是小写字母（lst&#x3D;[0]*26)</p></li><li><p>set做哈希表：求交集</p></li><li><p>map做哈希表：&lt;key,value&gt; key保留数值，map保留下标。</p><ul><li>这里如果时间复杂度高的话可以考虑使用数组的双指针法。</li></ul></li></ul><h2 id="242-有效的字母异位词-anagram"><a href="#242-有效的字母异位词-anagram" class="headerlink" title="242.有效的字母异位词(anagram)"></a>242.有效的字母异位词(anagram)</h2><p>record：一个记录26个字母出现次数的列表</p><p>index of record: ascii &#x3D;&#x3D;ord()&#x3D;&#x3D;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">isAnagram</span>(<span class="params">self, s: <span class="built_in">str</span>, t: <span class="built_in">str</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        record=[<span class="number">0</span>]*<span class="number">26</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">            record[<span class="built_in">ord</span>(i)-<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)]+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> t:</span><br><span class="line">            record[<span class="built_in">ord</span>(i)-<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)]-=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">            <span class="keyword">if</span> record[i]!=<span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="202-快乐数"><a href="#202-快乐数" class="headerlink" title="202. 快乐数"></a>202. 快乐数</h2><p>无限循环：有些数会重复出现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">isHappy</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        record=[]</span><br><span class="line">        <span class="keyword">while</span> n <span class="keyword">not</span> <span class="keyword">in</span> record:</span><br><span class="line">            record.append(n)</span><br><span class="line">            cur_sum=<span class="number">0</span></span><br><span class="line">            n_str=<span class="built_in">str</span>(n)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> n_str:</span><br><span class="line">                cur_sum+=<span class="built_in">int</span>(i)**<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> cur_sum==<span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                n=cur_sum</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="1-两数之和"><a href="#1-两数之和" class="headerlink" title="1.两数之和"></a>1.两数之和</h2><p>target-value</p><p>dic{num:index}</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">twoSum</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        record=&#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="keyword">if</span> target-v <span class="keyword">in</span> record:</span><br><span class="line">                <span class="keyword">return</span> [k,record[target-v]]</span><br><span class="line">            record[v]=k</span><br><span class="line">        <span class="keyword">return</span> []</span><br></pre></td></tr></table></figure><h2 id="三数之和，四数之和"><a href="#三数之和，四数之和" class="headerlink" title="三数之和，四数之和"></a>三数之和，四数之和</h2><ul><li><p>三数之和：i, left, right O(n^2)</p></li><li><p>四数之和：i, j, left, right(三数之和加一个for循环) O(n^3)</p></li></ul><p>双指针法一定要先排序<code>nums.sort()</code></p><p>去重：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> i &gt; <span class="number">0</span> <span class="keyword">and</span> nums[i] == nums[i-<span class="number">1</span>]:<span class="comment"># 对i去重</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">if</span> j &gt; i+<span class="number">1</span> <span class="keyword">and</span> nums[j] == nums[j-<span class="number">1</span>]: <span class="comment"># 对j去重</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="comment"># 对left和right去重</span></span><br><span class="line"><span class="keyword">if</span> sum34==target:</span><br><span class="line">  <span class="keyword">while</span> left &lt; right <span class="keyword">and</span> nums[left] == nums[left+<span class="number">1</span>]:</span><br><span class="line">  left += <span class="number">1</span></span><br><span class="line">  <span class="keyword">while</span> left &lt; right <span class="keyword">and</span> nums[right] == nums[right-<span class="number">1</span>]:</span><br><span class="line">    right -= <span class="number">1</span></span><br></pre></td></tr></table></figure><p>剪枝：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> nums[i] &gt; target <span class="keyword">and</span> nums[i] &gt; <span class="number">0</span> <span class="keyword">and</span> target &gt; <span class="number">0</span>:<span class="comment"># 剪枝（可省）</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> nums[i] + nums[j] &gt; target <span class="keyword">and</span> target &gt; <span class="number">0</span>: <span class="comment">#剪枝（可省）</span></span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 四数之和代码</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">threeSum</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span><br><span class="line">        nums.sort()</span><br><span class="line">        result=[]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">            right=<span class="built_in">len</span>(nums)-<span class="number">1</span></span><br><span class="line">            left=i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> nums[i]&gt;<span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> (i&gt;<span class="number">0</span> <span class="keyword">and</span> nums[i]==nums[i-<span class="number">1</span>]):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">while</span> left&lt;right:</span><br><span class="line">                cursum=nums[i]+nums[left]+nums[right]</span><br><span class="line">                <span class="keyword">if</span> cursum&lt;<span class="number">0</span>:</span><br><span class="line">                    left+=<span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> cursum&gt;<span class="number">0</span>:</span><br><span class="line">                    right-=<span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    result.append([nums[i],nums[left],nums[right]])</span><br><span class="line">                    <span class="keyword">while</span> left&lt;right <span class="keyword">and</span> nums[right]==nums[right-<span class="number">1</span>] :</span><br><span class="line">                        right-=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">while</span> left&lt;right <span class="keyword">and</span> nums[left]==nums[left+<span class="number">1</span>] :</span><br><span class="line">                        left+=<span class="number">1</span></span><br><span class="line">                    left+=<span class="number">1</span></span><br><span class="line">                    right-=<span class="number">1</span>         </span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h2 id="344-541-反转字符串"><a href="#344-541-反转字符串" class="headerlink" title="344&#x2F;541 反转字符串"></a>344&#x2F;541 反转字符串</h2><p>数组交换（双指针法）：<code>s[left],s[right]=s[right],s[left]</code></p><p>字符串交换（赋值，相加）：<code>s=s[:i]+s[i:i+k][::-1]+s[i+k:]</code></p><p>reference: <a href="https://programmercarl.com/">https://programmercarl.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode Journey</title>
      <link href="/2024/10/11/Leetcode%20Journey/"/>
      <url>/2024/10/11/Leetcode%20Journey/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th></th><th align="left"></th><th>题号</th><th>难度</th><th>时间</th><th>方法</th><th>注意事项</th><th align="left">备注</th></tr></thead><tbody><tr><td>数组</td><td align="left"></td><td></td><td></td><td></td><td></td><td></td><td align="left"></td></tr><tr><td>1</td><td align="left">704. Binary Search</td><td>704</td><td>Easy</td><td>2024-10-11</td><td>二分查找</td><td>注意边界left&#x2F;right&#x2F;middle</td><td align="left"></td></tr><tr><td>2</td><td align="left">27. Remove Element</td><td>27</td><td>Easy</td><td>2024-10-11</td><td>双指针法</td><td>快慢指针slow&#x2F;fast</td><td align="left"></td></tr><tr><td>3</td><td align="left">977. Squares of a Sorted Array</td><td>977</td><td>Easy</td><td>2024-10-11</td><td>双指针法</td><td>画图比较容易理解</td><td align="left"></td></tr><tr><td>4</td><td align="left">209. Minimum Size Subarray Sum</td><td>209</td><td>Medium</td><td>2024-10-11</td><td>双指针法</td><td>滑动窗口（subarray）</td><td align="left"></td></tr><tr><td>5</td><td align="left">59. Sprial Matrix</td><td>59</td><td>Medium</td><td>2024-10-14</td><td>模拟行为</td><td>从上到下，从左到右，左闭右开区间</td><td align="left">有点复杂</td></tr><tr><td>6</td><td align="left">区间和</td><td></td><td></td><td>2024-10-14</td><td>区间和</td><td>p[i]表示 下标 0 到 i 的 vec[i] 累加 之和</td><td align="left"></td></tr><tr><td>哈希表</td><td align="left"></td><td></td><td></td><td></td><td></td><td></td><td align="left"></td></tr><tr><td></td><td align="left">242.有效的字母异位词</td><td>242</td><td>Easy</td><td>2024-10-15</td><td></td><td>record:记录26个字母， ord（）</td><td align="left"></td></tr><tr><td></td><td align="left">349. 两个数组的交集</td><td>349</td><td>Easy</td><td>2024-10-15</td><td>找交集</td><td>set(nums1)&amp;set(nums2)</td><td align="left"></td></tr><tr><td></td><td align="left">202. 快乐数</td><td>202</td><td>Easy</td><td>2024-10-15</td><td></td><td></td><td align="left"></td></tr><tr><td></td><td align="left">1.两数之和</td><td>1</td><td>Easy</td><td>2024-10-15</td><td></td><td></td><td align="left"></td></tr><tr><td></td><td align="left">454.四数相加II</td><td>454</td><td>Medium</td><td>2024-10-16</td><td></td><td>dic.get(k,0)</td><td align="left">再做一次</td></tr><tr><td></td><td align="left">383. 赎金信</td><td>383</td><td>Easy</td><td>2024-10-17</td><td></td><td>涉及26个字母比较，考虑lst&#x3D;[0]*26</td><td align="left"></td></tr><tr><td></td><td align="left">15.三叔之和</td><td>15</td><td>Medium</td><td>2024-10-17</td><td>双指针法</td><td>双指针法一定要排序 nums.sort()，去重，剪枝</td><td align="left"></td></tr><tr><td></td><td align="left">18.四数之和</td><td>18</td><td>Medium</td><td>2024-10-17</td><td>双指针法</td><td>三叔之和的方法再加一个for循环</td><td align="left"></td></tr><tr><td>字符串</td><td align="left"></td><td></td><td></td><td></td><td></td><td></td><td align="left"></td></tr><tr><td></td><td align="left">344.反转字符串</td><td>344</td><td>Easy</td><td>2024-10-17</td><td>双指针法</td><td>数组交换:s[left],s[right]&#x3D;s[right],s[left]</td><td align="left"></td></tr><tr><td></td><td align="left">541.反转字符串2</td><td>541</td><td>Easy</td><td>2024-10-17</td><td></td><td>字符串交换：s&#x3D;s[:i]+s[i:i+k][::-1]+s[i+k:]</td><td align="left"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> records </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to Use Hexo</title>
      <link href="/2024/10/10/How%20to%20Use%20Hexo/"/>
      <url>/2024/10/10/How%20to%20Use%20Hexo/</url>
      
        <content type="html"><![CDATA[<p>It’s a good trial to build my first blog using hexo and github! I believe this is a huge step in my programming trip. I will use this blog to record my studying process in computer science&#x2F;languages, maybe sometime I will share some life. </p><h1 id="Tips-to-use-hexo"><a href="#Tips-to-use-hexo" class="headerlink" title="Tips to use hexo"></a>Tips to use hexo</h1><ul><li><p>my blog address: <a href="https://brittanywu.github.io/">https://brittanywu.github.io/</a></p></li><li><p>open terminal in MacOS: 1. command+space 2. enter ‘terminal’</p></li><li><p>blog stored in “source&#x2F;_posts”</p></li><li><p>tags should be written as tags:[Tag1, Tag2,Tag3]</p></li><li><p>categories: - [Cat1]&#x2F;&#x2F;- [Cat2]&#x2F;&#x2F; - [Cat3]</p></li><li><p>write a new blog:</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &lt;title&gt;</span><br><span class="line"><span class="comment">#can find .md file in &quot;blog/source/_post&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"><span class="comment">#decoration themes</span></span><br><span class="line">$ hexo clean <span class="comment">#if change themes</span></span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s <span class="comment">#check locally</span></span><br><span class="line"><span class="comment">#publish contents</span></span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h2 id="commands"><a href="#commands" class="headerlink" title="commands"></a>commands</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注意以下命令需要切换到blog文件夹(cd blog)执行</span></span><br><span class="line">hexo n <span class="string">&quot;文章名称&quot;</span>  =&gt; hexo new <span class="string">&quot;文章名称&quot;</span>  <span class="comment">#这两个都是创建新文章，前者是简写模式，下同，new后面加一个draft可以生成草稿</span></span><br><span class="line">hexo p  =&gt; hexo publish  <span class="comment">#发布草稿</span></span><br><span class="line">hexo g  =&gt; hexo generate  <span class="comment">#生成</span></span><br><span class="line">hexo s  =&gt; hexo server  <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d  =&gt; hexo deploy  <span class="comment">#部署</span></span><br><span class="line"></span><br><span class="line">hexo server   <span class="comment">#Hexo 会监视文件变动并自动更新，无须重启服务器。</span></span><br><span class="line">hexo server -s   <span class="comment">#静态模式</span></span><br><span class="line">hexo server -p 5000   <span class="comment">#更改端口</span></span><br><span class="line">hexo server -i 192.168.1.1   <span class="comment">#自定义IP</span></span><br><span class="line">hexo clean   <span class="comment">#清除缓存，网页正常情况下可以忽略此条命令</span></span><br></pre></td></tr></table></figure><h1 id="how-to-build-a-personal-website-MacOS"><a href="#how-to-build-a-personal-website-MacOS" class="headerlink" title="how to build a personal website(MacOS)"></a>how to build a personal website(MacOS)</h1><p>I followed instructions here, which is very useful: <a href="https://blog.l3zc.com/2022/05/mac%E7%8E%AF%E5%A2%83%E4%B8%8B%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">https://blog.l3zc.com/2022/05/mac%E7%8E%AF%E5%A2%83%E4%B8%8B%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</a></p><p>step-points: </p><ol><li><p>install homebrew </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>install git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br><span class="line">brew install node</span><br></pre></td></tr></table></figure><p>check version</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br><span class="line">node -v</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure></li><li><p>install hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init blog <span class="comment">#blog is just a name,can change it</span></span><br><span class="line"><span class="comment"># then a floder called &quot;blog&quot; appears in &quot;/home&quot; catalog</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure></li><li><p>deploy to github</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;username&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;example@example.com&quot;</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;example@example.com&quot;</span></span><br><span class="line"><span class="comment">#bulid key then find it in hidden floder &quot;~/.ssh/id_rsa.pub&quot;</span></span><br><span class="line"><span class="comment">#add them to github https://github.com/settings/keys</span></span><br></pre></td></tr></table></figure><p>new a repository in github called username.github.io</p><ul><li>find hidden floders: Command+Shift+.</li><li>open “.pub” file(in terminal):</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>upload to github</p><p>hexo extend:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line"><span class="comment">#change position: at the end of &quot;~/blog/_config.yml&quot;</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生成博客</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment">#将博客推送到指定的地方，在这里是我们的Github仓库</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ol><h1 id="Change-themes"><a href="#Change-themes" class="headerlink" title="Change themes"></a>Change themes</h1><ul><li><p>choose a theme and git clone it to “&#x2F;blog&#x2F;themes&#x2F;“:<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p></li><li><p>IN “&#x2F;blog&#x2F;_config.yml”:</p><ul><li>default “theme:landscape”: change the theme name (same as the theme floder name : “&#x2F;blog&#x2F;themes&#x2F;xxx”)</li><li>activate css: change url to your website url (<a href="https://brittanywu.github.io/">https://Brittanywu.github.io</a>)</li></ul></li><li><p>Change xxx to theme name: &#x2F;blog&#x2F;_config.xxx.yml</p></li><li><p>hyperlink fault:Cannot GET &#x2F;tags&#x2F;</p><ul><li>execute this in &#x2F;blog</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><ul><li><p>see the new floder in &#x2F;blog&#x2F;source&#x2F;tages</p></li><li><p>change content of “index.md”</p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line"><span class="section">layout: tags</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="layout-type"><a href="#layout-type" class="headerlink" title="layout type"></a>layout type</h2><p>“post”: Used for single article layouts.</p><p>“page”:seperate pages’ layout.</p><p>“index”</p><p>“archive”</p><p>“category”&#x2F;“categories”</p><p>“tag”&#x2F;“tags”</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> records </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/10/10/hello-world/"/>
      <url>/2024/10/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
